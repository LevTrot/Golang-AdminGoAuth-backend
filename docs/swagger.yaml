basePath: /
definitions:
  handler.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  handler.LoginInput:
    properties:
      email:
        type: string
      password_hash:
        type: string
    type: object
  handler.RefreshRequest:
    properties:
      refresh_token:
        type: string
    type: object
  handler.RegisterInput:
    properties:
      email:
        type: string
      password_hash:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  handler.TokenResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
host: localhost:8081
info:
  contact: {}
  description: Документация для AdminGo API.
  title: AdminGo API
  version: "1.0"
paths:
  /api/refresh:
    post:
      consumes:
      - application/json
      description: Принимает refresh_token, проверяет его, выдает новый access_token
        и refresh_token
      parameters:
      - description: Тело запроса с refresh_token
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.TokenResponse'
        "400":
          description: Некорректный ввод
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Неверный или истёкший refresh токен
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Обновить access и refresh токены
      tags:
      - auth
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - auth
  /profile:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get profile info
      tags:
      - profile
  /register:
    post:
      consumes:
      - application/json
      parameters:
      - description: User info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register user
      tags:
      - auth
swagger: "2.0"
